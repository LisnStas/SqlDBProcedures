<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="NorthwindDataSet" targetNamespace="http://tempuri.org/NorthwindDataSet.xsd" xmlns:mstns="http://tempuri.org/NorthwindDataSet.xsd" xmlns="http://tempuri.org/NorthwindDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="NorthwindConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="NorthwindConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsApp1.Properties.Settings.GlobalReference.Default.NorthwindConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PresidentsTableAdapter" GeneratorDataComponentClassName="PresidentsTableAdapter" Name="Presidents" UserDataComponentName="PresidentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NorthwindConnectionString (Settings)" DbObjectName="Northwind.dbo.Presidents" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Presidents] WHERE (([pres_id] = @Original_pres_id) AND ([pres_fname] = @Original_pres_fname) AND ([pres_lname] = @Original_pres_lname) AND ([profid_id] = @Original_profid_id) AND ([pres_from] = @Original_pres_from) AND ([pres_to] = @Original_pres_to) AND ([pres_home_state_id] = @Original_pres_home_state_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_pres_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="pres_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pres_fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pres_fname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pres_lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pres_lname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_profid_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="profid_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_pres_from" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pres_from" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_pres_to" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pres_to" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_pres_home_state_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="pres_home_state_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Presidents] ([pres_fname], [pres_lname], [profid_id], [pres_from], [pres_to], [pres_home_state_id]) VALUES (@pres_fname, @pres_lname, @profid_id, @pres_from, @pres_to, @pres_home_state_id);
SELECT pres_id, pres_fname, pres_lname, profid_id, pres_from, pres_to, pres_home_state_id FROM Presidents WHERE (pres_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pres_fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pres_fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pres_lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pres_lname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@profid_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="profid_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pres_from" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pres_from" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pres_to" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pres_to" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@pres_home_state_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="pres_home_state_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT pres_id, pres_fname, pres_lname, profid_id, pres_from, pres_to, pres_home_state_id FROM dbo.Presidents</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Presidents] SET [pres_fname] = @pres_fname, [pres_lname] = @pres_lname, [profid_id] = @profid_id, [pres_from] = @pres_from, [pres_to] = @pres_to, [pres_home_state_id] = @pres_home_state_id WHERE (([pres_id] = @Original_pres_id) AND ([pres_fname] = @Original_pres_fname) AND ([pres_lname] = @Original_pres_lname) AND ([profid_id] = @Original_profid_id) AND ([pres_from] = @Original_pres_from) AND ([pres_to] = @Original_pres_to) AND ([pres_home_state_id] = @Original_pres_home_state_id));
SELECT pres_id, pres_fname, pres_lname, profid_id, pres_from, pres_to, pres_home_state_id FROM Presidents WHERE (pres_id = @pres_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pres_fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pres_fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pres_lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pres_lname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@profid_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="profid_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pres_from" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pres_from" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pres_to" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pres_to" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@pres_home_state_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="pres_home_state_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_pres_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="pres_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pres_fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pres_fname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pres_lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pres_lname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_profid_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="profid_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_pres_from" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pres_from" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_pres_to" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pres_to" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_pres_home_state_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="pres_home_state_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="pres_id" ColumnName="pres_id" DataSourceName="Northwind.dbo.Presidents" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@pres_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="pres_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="pres_id" DataSetColumn="pres_id" />
              <Mapping SourceColumn="pres_fname" DataSetColumn="pres_fname" />
              <Mapping SourceColumn="pres_lname" DataSetColumn="pres_lname" />
              <Mapping SourceColumn="profid_id" DataSetColumn="profid_id" />
              <Mapping SourceColumn="pres_from" DataSetColumn="pres_from" />
              <Mapping SourceColumn="pres_to" DataSetColumn="pres_to" />
              <Mapping SourceColumn="pres_home_state_id" DataSetColumn="pres_home_state_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProfessionsTableAdapter" GeneratorDataComponentClassName="ProfessionsTableAdapter" Name="Professions" UserDataComponentName="ProfessionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NorthwindConnectionString (Settings)" DbObjectName="Northwind.dbo.Professions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Professions] WHERE (([profession_id] = @Original_profession_id) AND ([profession_name] = @Original_profession_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_profession_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="profession_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_profession_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="profession_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Professions] ([profession_name]) VALUES (@profession_name);
SELECT profession_id, profession_name FROM Professions WHERE (profession_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@profession_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="profession_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT profession_id, profession_name FROM dbo.Professions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Professions] SET [profession_name] = @profession_name WHERE (([profession_id] = @Original_profession_id) AND ([profession_name] = @Original_profession_name));
SELECT profession_id, profession_name FROM Professions WHERE (profession_id = @profession_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@profession_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="profession_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_profession_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="profession_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_profession_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="profession_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="profession_id" ColumnName="profession_id" DataSourceName="Northwind.dbo.Professions" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@profession_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="profession_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="profession_id" DataSetColumn="profession_id" />
              <Mapping SourceColumn="profession_name" DataSetColumn="profession_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StatesTableAdapter" GeneratorDataComponentClassName="StatesTableAdapter" Name="States" UserDataComponentName="StatesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NorthwindConnectionString (Settings)" DbObjectName="Northwind.dbo.States" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[States] WHERE (([state_id] = @Original_state_id) AND ([state_name] = @Original_state_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_state_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="state_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_state_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="state_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[States] ([state_name]) VALUES (@state_name);
SELECT state_id, state_name FROM States WHERE (state_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@state_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="state_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT state_id, state_name FROM dbo.States</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[States] SET [state_name] = @state_name WHERE (([state_id] = @Original_state_id) AND ([state_name] = @Original_state_name));
SELECT state_id, state_name FROM States WHERE (state_id = @state_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@state_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="state_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_state_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="state_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_state_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="state_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="state_id" ColumnName="state_id" DataSourceName="Northwind.dbo.States" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@state_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="state_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="state_id" DataSetColumn="state_id" />
              <Mapping SourceColumn="state_name" DataSetColumn="state_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="NorthwindDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="NorthwindDataSet" msprop:Generator_UserDSName="NorthwindDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Presidents" msprop:Generator_TableClassName="PresidentsDataTable" msprop:Generator_TableVarName="tablePresidents" msprop:Generator_TablePropName="Presidents" msprop:Generator_RowDeletingName="PresidentsRowDeleting" msprop:Generator_RowChangingName="PresidentsRowChanging" msprop:Generator_RowEvHandlerName="PresidentsRowChangeEventHandler" msprop:Generator_RowDeletedName="PresidentsRowDeleted" msprop:Generator_UserTableName="Presidents" msprop:Generator_RowChangedName="PresidentsRowChanged" msprop:Generator_RowEvArgName="PresidentsRowChangeEvent" msprop:Generator_RowClassName="PresidentsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="pres_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnpres_id" msprop:Generator_ColumnPropNameInRow="pres_id" msprop:Generator_ColumnPropNameInTable="pres_idColumn" msprop:Generator_UserColumnName="pres_id" type="xs:int" />
              <xs:element name="pres_fname" msprop:Generator_ColumnVarNameInTable="columnpres_fname" msprop:Generator_ColumnPropNameInRow="pres_fname" msprop:Generator_ColumnPropNameInTable="pres_fnameColumn" msprop:Generator_UserColumnName="pres_fname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pres_lname" msprop:Generator_ColumnVarNameInTable="columnpres_lname" msprop:Generator_ColumnPropNameInRow="pres_lname" msprop:Generator_ColumnPropNameInTable="pres_lnameColumn" msprop:Generator_UserColumnName="pres_lname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="profid_id" msprop:Generator_ColumnVarNameInTable="columnprofid_id" msprop:Generator_ColumnPropNameInRow="profid_id" msprop:Generator_ColumnPropNameInTable="profid_idColumn" msprop:Generator_UserColumnName="profid_id" type="xs:short" />
              <xs:element name="pres_from" msprop:Generator_ColumnVarNameInTable="columnpres_from" msprop:Generator_ColumnPropNameInRow="pres_from" msprop:Generator_ColumnPropNameInTable="pres_fromColumn" msprop:Generator_UserColumnName="pres_from">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pres_to" msprop:Generator_ColumnVarNameInTable="columnpres_to" msprop:Generator_ColumnPropNameInRow="pres_to" msprop:Generator_ColumnPropNameInTable="pres_toColumn" msprop:Generator_UserColumnName="pres_to">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pres_home_state_id" msprop:Generator_ColumnVarNameInTable="columnpres_home_state_id" msprop:Generator_ColumnPropNameInRow="pres_home_state_id" msprop:Generator_ColumnPropNameInTable="pres_home_state_idColumn" msprop:Generator_UserColumnName="pres_home_state_id" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Professions" msprop:Generator_TableClassName="ProfessionsDataTable" msprop:Generator_TableVarName="tableProfessions" msprop:Generator_TablePropName="Professions" msprop:Generator_RowDeletingName="ProfessionsRowDeleting" msprop:Generator_RowChangingName="ProfessionsRowChanging" msprop:Generator_RowEvHandlerName="ProfessionsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProfessionsRowDeleted" msprop:Generator_UserTableName="Professions" msprop:Generator_RowChangedName="ProfessionsRowChanged" msprop:Generator_RowEvArgName="ProfessionsRowChangeEvent" msprop:Generator_RowClassName="ProfessionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="profession_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnprofession_id" msprop:Generator_ColumnPropNameInRow="profession_id" msprop:Generator_ColumnPropNameInTable="profession_idColumn" msprop:Generator_UserColumnName="profession_id" type="xs:short" />
              <xs:element name="profession_name" msprop:Generator_ColumnVarNameInTable="columnprofession_name" msprop:Generator_ColumnPropNameInRow="profession_name" msprop:Generator_ColumnPropNameInTable="profession_nameColumn" msprop:Generator_UserColumnName="profession_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="States" msprop:Generator_TableClassName="StatesDataTable" msprop:Generator_TableVarName="tableStates" msprop:Generator_TablePropName="States" msprop:Generator_RowDeletingName="StatesRowDeleting" msprop:Generator_RowChangingName="StatesRowChanging" msprop:Generator_RowEvHandlerName="StatesRowChangeEventHandler" msprop:Generator_RowDeletedName="StatesRowDeleted" msprop:Generator_UserTableName="States" msprop:Generator_RowChangedName="StatesRowChanged" msprop:Generator_RowEvArgName="StatesRowChangeEvent" msprop:Generator_RowClassName="StatesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="state_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnstate_id" msprop:Generator_ColumnPropNameInRow="state_id" msprop:Generator_ColumnPropNameInTable="state_idColumn" msprop:Generator_UserColumnName="state_id" type="xs:short" />
              <xs:element name="state_name" msprop:Generator_ColumnVarNameInTable="columnstate_name" msprop:Generator_ColumnPropNameInRow="state_name" msprop:Generator_ColumnPropNameInTable="state_nameColumn" msprop:Generator_UserColumnName="state_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Presidents" />
      <xs:field xpath="mstns:pres_id" />
    </xs:unique>
    <xs:unique name="Professions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Professions" />
      <xs:field xpath="mstns:profession_id" />
    </xs:unique>
    <xs:unique name="States_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:States" />
      <xs:field xpath="mstns:state_id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Presidents_Professions" msdata:parent="Professions" msdata:child="Presidents" msdata:parentkey="profession_id" msdata:childkey="profid_id" msprop:Generator_UserChildTable="Presidents" msprop:Generator_ChildPropName="GetPresidentsRows" msprop:Generator_UserRelationName="FK_Presidents_Professions" msprop:Generator_RelationVarName="relationFK_Presidents_Professions" msprop:Generator_UserParentTable="Professions" msprop:Generator_ParentPropName="ProfessionsRow" />
      <msdata:Relationship name="FK_Presidents_States" msdata:parent="States" msdata:child="Presidents" msdata:parentkey="state_id" msdata:childkey="pres_home_state_id" msprop:Generator_UserChildTable="Presidents" msprop:Generator_ChildPropName="GetPresidentsRows" msprop:Generator_UserRelationName="FK_Presidents_States" msprop:Generator_RelationVarName="relationFK_Presidents_States" msprop:Generator_UserParentTable="States" msprop:Generator_ParentPropName="StatesRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>